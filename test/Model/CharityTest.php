<?php
/**
 * CharityTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Ebay\Sell\Listing
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Listing API
 *
 * Note: This is a (Limited Release) API available only to select developers approved by business units. Enables a seller adding an ad or item on a Partner's site to automatically create an eBay listing draft using the item details from the Partner's site.
 *
 * The version of the OpenAPI document: v1_beta.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ebay\Sell\Listing\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CharityTest Class Doc Comment
 *
 * @category    Class
 * @description This type is used to identify the charitable organization that will receive a percentage of sale proceeds for each sale generated by the listing. This container also includes the donation percentage, which is the percentage of the sale proceeds that the charitable organization will get.&lt;br/&gt;&lt;br/&gt;In order to receive a percentage of the sales proceeds, the non-profit organization must be registered with the PayPal Giving Fund, which is a partner of eBay for Charity.
 * @package     Ebay\Sell\Listing
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CharityTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Charity"
     */
    public function testCharity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "donation_percentage"
     */
    public function testPropertyDonationPercentage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "charity_id"
     */
    public function testPropertyCharityId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
